#Copyright 2010-2011 SBA Research gGmbH
#
#     This file is part of SocialSnapshot.
#
#    SocialSnapshot is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    SocialSnapshot is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with SocialSnapshot.  If not, see <http://www.gnu.org/licenses/>.
*** selenium/trunk/common/src/java/org/openqa/selenium/internal/CommandLine.java	Tue Sep 28 14:21:12 2010
--- /tmp/selenium/trunk/common/src/java/org/openqa/selenium/internal/CommandLine.java	Wed Mar 30 12:37:14 2011
***************
*** 26,31 ****
--- 26,32 ----
  import java.lang.reflect.InvocationTargetException;
  import java.lang.reflect.Method;
  import java.util.Map;
+ import java.util.HashMap;
  
  import org.openqa.selenium.Platform;
  import org.openqa.selenium.WebDriverException;
***************
*** 41,46 ****
--- 42,52 ----
    private boolean executed;
    private Process proc;
    private String allInput;
+   private Map<String, String> envAdditions;
+ 
+   {
+   	envAdditions = new HashMap<String, String>();
+   }
  
    public CommandLine(String executable, String... args) {
      commandAndArgs = new String[args.length + 1];
***************
*** 56,66 ****
    }
  
    public void setEnvironmentVariable(String name, String value) {
! 
    }
  
    public void setDynamicLibraryPath(String... values) {
! 
    }
  
    public static String findExecutable(String named) {
--- 62,80 ----
    }
  
    public void setEnvironmentVariable(String name, String value) {
!   	this.envAdditions.put(name, value);
    }
  
    public void setDynamicLibraryPath(String... values) {
!   	StringBuilder path = new StringBuilder();
! 	for(String pathElement : values)
! 	{
! 		if(pathElement.length() > 0)
! 			path.append(File.pathSeparator);
! 		path.append(pathElement);
! 	}
! 	//FIXME: This is probably very *NIX specific, no idea how to do this in Windows...
!   	this.envAdditions.put("LD_LIBRARY_PATH", path.toString());
    }
  
    public static String findExecutable(String named) {
***************
*** 104,109 ****
--- 118,127 ----
  
        ProcessBuilder builder = new ProcessBuilder(commandAndArgs);
        builder.redirectErrorStream(true);
+       for(String envKey : envAdditions.keySet())
+       {
+       	builder.environment().put(envKey, envAdditions.get(envKey));
+       }
        proc = builder.start();
  
        drainer = new StreamDrainer(proc);
